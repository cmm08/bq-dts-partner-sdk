{
  "discoveryVersion": "v1",
  "version_module": true,
  "schemas": {
    "ListTransferRunsResponse": {
      "description": "The returned list of pipelines in the project.",
      "type": "object",
      "properties": {
        "transferRuns": {
          "description": "Output only. The stored pipeline transfer runs.",
          "type": "array",
          "items": {
            "$ref": "TransferRun"
          }
        },
        "nextPageToken": {
          "description": "Output only. The next-pagination token. For multiple-page list results,\nthis token can be used as the\n`ListTransferRunsRequest.page_token`\nto request the next page of list results.",
          "type": "string"
        }
      },
      "id": "ListTransferRunsResponse"
    },
    "FinishRunRequest": {
      "properties": {},
      "id": "FinishRunRequest",
      "description": "A request to finish a run.",
      "type": "object"
    },
    "StartBigQueryJobsRequest": {
      "description": "A request to start and monitor a BigQuery load job.",
      "type": "object",
      "properties": {
        "importedData": {
          "description": "Import jobs which should be started and monitored.",
          "type": "array",
          "items": {
            "$ref": "ImportedDataInfo"
          }
        },
        "userCredentials": {
          "description": "User credentials which should be used to start/monitor\nBigQuery jobs. If not specified, then jobs\nare started using data source service account credentials.\nThis may be OAuth token or JWT token.",
          "format": "byte",
          "type": "string"
        }
      },
      "id": "StartBigQueryJobsRequest"
    },
    "LogTransferRunMessagesRequest": {
      "description": "A request to add transfer status messages to the run.",
      "type": "object",
      "properties": {
        "transferMessages": {
          "description": "Messages to append.",
          "type": "array",
          "items": {
            "$ref": "TransferMessage"
          }
        }
      },
      "id": "LogTransferRunMessagesRequest"
    },
    "FieldSchema": {
      "description": "Defines schema of a field in the imported data.",
      "type": "object",
      "properties": {
        "fieldName": {
          "description": "Field name. Matches: A-Za-z_{0,127}",
          "type": "string"
        },
        "description": {
          "description": "Description for this field.",
          "type": "string"
        },
        "type": {
          "enum": [
            "TYPE_UNSPECIFIED",
            "STRING",
            "INTEGER",
            "FLOAT",
            "RECORD",
            "BYTES",
            "BOOLEAN",
            "TIMESTAMP",
            "DATE",
            "TIME",
            "DATETIME",
            "NUMERIC"
          ],
          "description": "Field type",
          "type": "string",
          "enumDescriptions": [
            "Illegal value.",
            "64K, UTF8.",
            "64-bit signed.",
            "64-bit IEEE floating point.",
            "Aggregate type.",
            "64K, Binary.",
            "2-valued.",
            "64-bit signed usec since UTC epoch.",
            "Civil date - Year, Month, Day.",
            "Civil time - Hour, Minute, Second, Microseconds.",
            "Combination of civil date and civil time.",
            "Numeric type with 38 decimal digits of precision and 9 decimal digits\nof scale."
          ]
        },
        "isRepeated": {
          "description": "Is field repeated.",
          "type": "boolean"
        },
        "schema": {
          "$ref": "RecordSchema",
          "description": "Present iff type == RECORD."
        }
      },
      "id": "FieldSchema"
    },
    "ListTransferConfigsResponse": {
      "description": "The returned list of pipelines in the project.",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "Output only. The next-pagination token. For multiple-page list results,\nthis token can be used as the\n`ListTransferConfigsRequest.page_token`\nto request the next page of list results.",
          "type": "string"
        },
        "transferConfigs": {
          "description": "Output only. The stored pipeline transfer configurations.",
          "type": "array",
          "items": {
            "$ref": "TransferConfig"
          }
        }
      },
      "id": "ListTransferConfigsResponse"
    },
    "DataSourceDefinition": {
      "properties": {
        "disabled": {
          "description": "Is data source disabled? If true, data_source is not visible.\nAPI will also stop returning any data transfer configs and/or runs\nassociated with the data source. This setting has higher priority\nthan whitelisted_project_ids.",
          "type": "boolean"
        },
        "runTimeOffset": {
          "description": "Duration which should be added to schedule_time to calculate\nrun_time when job is scheduled. Only applicable for automatically\nscheduled transfer runs. Used to start a run early on a data source that\nsupports continuous data refresh to compensate for unknown timezone\noffsets. Use a negative number to start a run late for data sources not\nsupporting continuous data refresh.",
          "format": "google-duration",
          "type": "string"
        },
        "name": {
          "description": "The resource name of the data source definition.\nData source definition names have the form\n`projects/{project_id}/locations/{location}/dataSourceDefinitions/{data_source_id}`.",
          "type": "string"
        },
        "dataSource": {
          "description": "Data source metadata.",
          "$ref": "DataSource"
        },
        "transferRunPubsubTopic": {
          "description": "Output only. The pubsub topic to be used for broadcasting a message when a\ntransfer run is created. The comments about \"{region}\" for\ntransfer_config_pubsub_topic apply here too.",
          "type": "string"
        },
        "supportEmail": {
          "description": "Support e-mail address of the OAuth client's Brand, which contains the\nconsent screen data.",
          "type": "string"
        },
        "supportedLocationIds": {
          "description": "Supported location_ids of the data source. The valid values are the\n\"location_id\" field of the response of\n`GET\nhttps://bigquerydatatransfer.googleapis.com/v1/{name=projects/*}/locations`\nIn addition, if the data source needs to support all available regions,\nsupported_location_ids can be set to \"global\" (a single string element).\nWhen \"global\" is specified:\n1) the data source implementation is supposed to stage the data in proper\nregion of the destination dataset;\n2) Data source developer should be aware of the implications (e.g., network\ntraffic latency, potential charge associated with cross-region traffic,\netc.) of supporting the \"global\" region;\n3) when new regions are added in Data Transfer Service, the new\nregions will be treated as \"supported\" automatically (that is, no need to\nupdate the supported_location_ids field).",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "DataSourceDefinition",
      "description": "Represents the data source definition.",
      "type": "object"
    },
    "Empty": {
      "description": "A generic empty message that you can re-use to avoid defining duplicated\nempty messages in your APIs. A typical example is to use it as the request\nor the response type of an API method. For instance:\n\n    service Foo {\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n    }\n\nThe JSON representation for `Empty` is empty JSON object `{}`.",
      "type": "object",
      "properties": {},
      "id": "Empty"
    },
    "Location": {
      "description": "A resource that represents Google Cloud Platform location.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Resource name for the location, which may vary between implementations.\nFor example: `\"projects/example-project/locations/us-east1\"`",
          "type": "string"
        },
        "locationId": {
          "description": "The canonical id for this location. For example: `\"us-east1\"`.",
          "type": "string"
        },
        "displayName": {
          "description": "The friendly name for this location, typically a nearby city name.\nFor example, \"Tokyo\".",
          "type": "string"
        },
        "metadata": {
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "description": "Service-specific metadata. For example the available capacity at the given\nlocation.",
          "type": "object"
        },
        "labels": {
          "description": "Cross-service attributes for the location. For example\n\n    {\"cloud.googleapis.com/region\": \"us-east1\"}",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "id": "Location"
    },
    "RecordSchema": {
      "description": "Describes schema of the data to be ingested.",
      "type": "object",
      "properties": {
        "fields": {
          "description": "One field per column in the record.",
          "type": "array",
          "items": {
            "$ref": "FieldSchema"
          }
        }
      },
      "id": "RecordSchema"
    },
    "TransferRun": {
      "description": "Represents a data transfer run.",
      "type": "object",
      "properties": {
        "params": {
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          },
          "description": "Output only. Data transfer specific parameters.",
          "type": "object"
        },
        "endTime": {
          "description": "Output only. Time when transfer run ended.\nParameter ignored by server for input requests.",
          "format": "google-datetime",
          "type": "string"
        },
        "startTime": {
          "description": "Output only. Time when transfer run was started.\nParameter ignored by server for input requests.",
          "format": "google-datetime",
          "type": "string"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "User labels.",
          "type": "object"
        },
        "scheduleTime": {
          "description": "Minimum time after which a transfer run can be started.",
          "format": "google-datetime",
          "type": "string"
        },
        "errorStatus": {
          "$ref": "Status",
          "description": "Status of the transfer run."
        },
        "schedule": {
          "description": "Output only. Describes the schedule of this transfer run if it was\ncreated as part of a regular schedule. For batch transfer runs that are\nscheduled manually, this is empty.\nNOTE: the system might choose to delay the schedule depending on the\ncurrent load, so `schedule_time` doesn't always matches this.",
          "type": "string"
        },
        "updateTime": {
          "description": "Output only. Last time the data transfer run state was updated.",
          "format": "google-datetime",
          "type": "string"
        },
        "runTime": {
          "description": "For batch transfer runs, specifies the date and time that\ndata should be ingested.",
          "format": "google-datetime",
          "type": "string"
        },
        "dataSourceId": {
          "description": "Output only. Data source id.",
          "type": "string"
        },
        "state": {
          "description": "Data transfer run state. Ignored for input requests.",
          "type": "string",
          "enumDescriptions": [
            "State placeholder.",
            "Data transfer is scheduled and is waiting to be picked up by\ndata transfer backend.",
            "Data transfer is in progress.",
            "Data transfer completed successsfully.",
            "Data transfer failed.",
            "Data transfer is cancelled."
          ],
          "enum": [
            "TRANSFER_STATE_UNSPECIFIED",
            "PENDING",
            "RUNNING",
            "SUCCEEDED",
            "FAILED",
            "CANCELLED"
          ]
        },
        "destinationDatasetId": {
          "description": "Output only. The BigQuery target dataset id.",
          "type": "string"
        },
        "name": {
          "description": "The resource name of the transfer run.\nTransfer run names have the form\n`projects/{project_id}/locations/{location}/transferConfigs/{config_id}/runs/{run_id}`.\nThe name is ignored when creating a transfer run.",
          "type": "string"
        },
        "userId": {
          "description": "Output only. Unique ID of the user on whose behalf transfer is done.\nApplicable only to data sources that do not support service accounts.\nWhen set to 0, the data source service account credentials are used.\nMay be negative. Note, that this identifier is not stable.\nIt may change over time even for the same user.",
          "format": "int64",
          "type": "string"
        }
      },
      "id": "TransferRun"
    },
    "CheckValidCredsResponse": {
      "description": "A response indicating whether the credentials exist and are valid.",
      "type": "object",
      "properties": {
        "hasValidCreds": {
          "description": "If set to `true`, the credentials exist and are valid.",
          "type": "boolean"
        }
      },
      "id": "CheckValidCredsResponse"
    },
    "ImportedDataInfo": {
      "description": "Describes data which should be imported.",
      "type": "object",
      "properties": {
        "destinationTableDescription": {
          "description": "The description of a destination table. This can be several sentences\nor paragraphs describing the table contents in detail.",
          "type": "string"
        },
        "tableDefs": {
          "description": "When used WITHOUT the \"sql\" parameter, describes the schema of the\ndestination table.\nWhen used WITH the \"sql\" parameter, describes tables with data stored\noutside of BigQuery.",
          "type": "array",
          "items": {
            "$ref": "TableDefinition"
          }
        },
        "sql": {
          "description": "SQL query to run. When empty, API checks that there is only one\ntable_def specified and loads this table. Only Standard SQL queries\nare accepted. Legacy SQL is not allowed.",
          "type": "string"
        },
        "destinationTableId": {
          "description": "Table where results should be written.",
          "type": "string"
        },
        "userDefinedFunctions": {
          "description": "Inline code for User-defined function resources.\nIgnored when \"sql\" parameter is empty.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "ImportedDataInfo"
    },
    "TransferMessage": {
      "description": "Represents a user facing message for a particular data transfer run.",
      "type": "object",
      "properties": {
        "messageTime": {
          "description": "Time when message was logged.",
          "format": "google-datetime",
          "type": "string"
        },
        "severity": {
          "enumDescriptions": [
            "No severity specified.",
            "Informational message.",
            "Warning message.",
            "Error message.",
            "Debug message."
          ],
          "enum": [
            "MESSAGE_SEVERITY_UNSPECIFIED",
            "INFO",
            "WARNING",
            "ERROR",
            "DEBUG"
          ],
          "description": "Message severity.",
          "type": "string"
        },
        "messageText": {
          "description": "Message text.",
          "type": "string"
        }
      },
      "id": "TransferMessage"
    },
    "DataSourceParameter": {
      "description": "Represents a data source parameter with validation rules, so that\nparameters can be rendered in the UI. These parameters are given to us by\nsupported data sources, and include all needed information for rendering\nand validation.\nThus, whoever uses this api can decide to generate either generic ui,\nor custom data source specific forms.",
      "type": "object",
      "properties": {
        "validationRegex": {
          "description": "Regular expression which can be used for parameter validation.",
          "type": "string"
        },
        "paramId": {
          "description": "Parameter identifier.",
          "type": "string"
        },
        "required": {
          "description": "Is parameter required.",
          "type": "boolean"
        },
        "repeated": {
          "description": "Deprecated. This field has no effect.",
          "type": "boolean"
        },
        "displayName": {
          "description": "Parameter display name in the user interface.",
          "type": "string"
        },
        "immutable": {
          "description": "Cannot be changed after initial creation.",
          "type": "boolean"
        },
        "validationDescription": {
          "description": "Description of the requirements for this field, in case the user input does\nnot fulfill the regex pattern or min/max values.",
          "type": "string"
        },
        "fields": {
          "description": "Deprecated. This field has no effect.",
          "type": "array",
          "items": {
            "$ref": "DataSourceParameter"
          }
        },
        "maxValue": {
          "description": "For integer and double values specifies maxminum allowed value.",
          "format": "double",
          "type": "number"
        },
        "type": {
          "enum": [
            "TYPE_UNSPECIFIED",
            "STRING",
            "INTEGER",
            "DOUBLE",
            "BOOLEAN",
            "RECORD",
            "PLUS_PAGE"
          ],
          "description": "Parameter type.",
          "type": "string",
          "enumDescriptions": [
            "Type unspecified.",
            "String parameter.",
            "Integer parameter (64-bits).\nWill be serialized to json as string.",
            "Double precision floating point parameter.",
            "Boolean parameter.",
            "Deprecated. This field has no effect.",
            "Page ID for a Google+ Page."
          ]
        },
        "recurse": {
          "description": "Deprecated. This field has no effect.",
          "type": "boolean"
        },
        "description": {
          "description": "Parameter description.",
          "type": "string"
        },
        "allowedValues": {
          "description": "All possible values for the parameter.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "minValue": {
          "description": "For integer and double values specifies minimum allowed value.",
          "format": "double",
          "type": "number"
        },
        "validationHelpUrl": {
          "description": "URL to a help document to further explain the naming requirements.",
          "type": "string"
        }
      },
      "id": "DataSourceParameter"
    },
    "ListDataSourceDefinitionsResponse": {
      "properties": {
        "dataSourceDefinitions": {
          "description": "List of supported data source definitions.",
          "type": "array",
          "items": {
            "$ref": "DataSourceDefinition"
          }
        },
        "nextPageToken": {
          "description": "Output only. The next-pagination token. For multiple-page list results,\nthis token can be used as the\n`ListDataSourceDefinitionsRequest.page_token`\nto request the next page of the list results.",
          "type": "string"
        }
      },
      "id": "ListDataSourceDefinitionsResponse",
      "description": "Returns a list of supported data source definitions.",
      "type": "object"
    },
    "ListLocationsResponse": {
      "description": "The response message for Locations.ListLocations.",
      "type": "object",
      "properties": {
        "locations": {
          "description": "A list of locations that matches the specified filter in the request.",
          "type": "array",
          "items": {
            "$ref": "Location"
          }
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      },
      "id": "ListLocationsResponse"
    },
    "TableDefinition": {
      "description": "External table definition. These tables can be referenced with 'name'\nin the query and can be read just like any other table.",
      "type": "object",
      "properties": {
        "format": {
          "enumDescriptions": [
            "Unspecified format. In this case, we have to infer the format from the\ndata source.",
            "CSV format.",
            "Newline-delimited JSON.",
            "Avro format. See http://avro.apache.org .",
            "RecordIO.",
            "ColumnIO.",
            "Capacitor.",
            "Parquet format.  See https://parquet.apache.org ."
          ],
          "enum": [
            "FORMAT_UNSPECIFIED",
            "CSV",
            "JSON",
            "AVRO",
            "RECORDIO",
            "COLUMNIO",
            "CAPACITOR",
            "PARQUET"
          ],
          "description": "Describes the format of the data in source_uri.",
          "type": "string"
        },
        "schema": {
          "$ref": "RecordSchema",
          "description": "Optional schema for the data. When not specified for JSON and CSV formats\nwe will try to detect it automatically."
        },
        "maxBadRecords": {
          "description": "Specify the maximum number of bad records that can be ignored.\nIf bad records exceed this threshold the query is aborted.",
          "format": "int32",
          "type": "integer"
        },
        "sourceUris": {
          "description": "URIs for the data to be imported. All URIs must be from the same storage\nsystem.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "tableId": {
          "description": "BigQuery table_id (required). This will be used to reference this\ntable in the query.",
          "type": "string"
        },
        "encoding": {
          "enumDescriptions": [
            "Default encoding (UTF8).",
            "ISO_8859_1 encoding.",
            "UTF8 encoding."
          ],
          "enum": [
            "ENCODING_UNSPECIFIED",
            "ISO_8859_1",
            "UTF8"
          ],
          "description": "Character encoding of the input when applicable (CSV, JSON).\nDefaults to UTF8.",
          "type": "string"
        },
        "csvOptions": {
          "description": "CSV specific options.",
          "$ref": "CsvOptions"
        }
      },
      "id": "TableDefinition"
    },
    "IsDataTransferServiceEnabledRequest": {
      "description": "A request to determine whether data transfer is enabled for the project.",
      "type": "object",
      "properties": {},
      "id": "IsDataTransferServiceEnabledRequest"
    },
    "CsvOptions": {
      "description": "CSV specific options.",
      "type": "object",
      "properties": {
        "skipLeadingRows": {
          "description": "Number of leading rows to skip.",
          "format": "int64",
          "type": "string"
        },
        "allowQuotedNewlines": {
          "description": "Whether CSV files are allowed to have quoted newlines. If quoted\nnewlines are allowed, we can't split CSV files.",
          "type": "boolean"
        },
        "fieldDelimiter": {
          "description": "The delimiter.  We currently restrict this to U+0001 to U+00FF and\napply additional constraints during validation.",
          "type": "string"
        },
        "quoteChar": {
          "description": "The quote character.  We currently restrict this to U+0000 to U+00FF\nand apply additional constraints during validation. Set to '\\0' to\nindicate no quote is used.",
          "type": "string"
        }
      },
      "id": "CsvOptions"
    },
    "DataSource": {
      "description": "Represents data source metadata. Metadata is sufficient to\nrender UI and request proper OAuth tokens.",
      "type": "object",
      "properties": {
        "scopes": {
          "description": "Api auth scopes for which refresh token needs to be obtained. Only valid\nwhen `client_id` is specified. Ignored otherwise. These are scopes needed\nby a data source to prepare data and ingest them into BigQuery,\ne.g., https://www.googleapis.com/auth/bigquery",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "description": "Output only. Data source resource name.",
          "type": "string"
        },
        "partnerLegalName": {
          "description": "Partner's legal name of this data source",
          "type": "string"
        },
        "minimumScheduleInterval": {
          "description": "The minimum interval for scheduler to schedule runs.",
          "format": "google-duration",
          "type": "string"
        },
        "clientId": {
          "description": "Data source client id which should be used to receive refresh token.\nWhen not supplied, no offline credentials are populated for data transfer.",
          "type": "string"
        },
        "authorizationType": {
          "enum": [
            "AUTHORIZATION_TYPE_UNSPECIFIED",
            "AUTHORIZATION_CODE",
            "GOOGLE_PLUS_AUTHORIZATION_CODE"
          ],
          "description": "Indicates the type of authorization.",
          "type": "string",
          "enumDescriptions": [
            "Type unspecified.",
            "Use OAuth 2 authorization codes that can be exchanged\nfor a refresh token on the backend.",
            "Return an authorization code for a given Google+ page that can then be\nexchanged for a refresh token on the backend."
          ]
        },
        "supportsCustomSchedule": {
          "description": "Specifies whether the data source supports a user defined schedule, or\noperates on the default schedule.\nWhen set to `true`, user can override default schedule.",
          "type": "boolean"
        },
        "displayName": {
          "description": "User friendly data source name.",
          "type": "string"
        },
        "updateDeadlineSeconds": {
          "description": "The number of seconds to wait for an update from the data source\nbefore the Data Transfer Service marks the transfer as FAILED.",
          "format": "int32",
          "type": "integer"
        },
        "dataRefreshType": {
          "enumDescriptions": [
            "The data source won't support data auto refresh, which is default value.",
            "The data source supports data auto refresh, and runs will be scheduled\nfor the past few days. Does not allow custom values to be set for each\ntransfer config.",
            "The data source supports data auto refresh, and runs will be scheduled\nfor the past few days. Allows custom values to be set for each transfer\nconfig."
          ],
          "enum": [
            "DATA_REFRESH_TYPE_UNSPECIFIED",
            "SLIDING_WINDOW",
            "CUSTOM_SLIDING_WINDOW"
          ],
          "description": "Specifies whether the data source supports automatic data refresh for the\npast few days, and how it's supported.\nFor some data sources, data might not be complete until a few days later,\nso it's useful to refresh data automatically.",
          "type": "string"
        },
        "parameters": {
          "description": "Data source parameters.",
          "type": "array",
          "items": {
            "$ref": "DataSourceParameter"
          }
        },
        "helpUrl": {
          "description": "Url for the help document for this data source.",
          "type": "string"
        },
        "defaultSchedule": {
          "description": "Default data transfer schedule.\nExamples of valid schedules include:\n`1st,3rd monday of month 15:30`,\n`every wed,fri of jan,jun 13:15`, and\n`first sunday of quarter 00:00`.",
          "type": "string"
        },
        "supportsMultipleTransfers": {
          "description": "Deprecated. This field has no effect.",
          "type": "boolean"
        },
        "defaultDataRefreshWindowDays": {
          "description": "Default data refresh window on days.\nOnly meaningful when `data_refresh_type` = `SLIDING_WINDOW`.",
          "format": "int32",
          "type": "integer"
        },
        "manualRunsDisabled": {
          "description": "Disables backfilling and manual run scheduling\nfor the data source.",
          "type": "boolean"
        },
        "transferType": {
          "enumDescriptions": [
            "Invalid or Unknown transfer type placeholder.",
            "Batch data transfer.",
            "Streaming data transfer. Streaming data source currently doesn't\nsupport multiple transfer configs per project."
          ],
          "enum": [
            "TRANSFER_TYPE_UNSPECIFIED",
            "BATCH",
            "STREAMING"
          ],
          "description": "Deprecated. This field has no effect.",
          "type": "string"
        },
        "description": {
          "description": "User friendly data source description string.",
          "type": "string"
        },
        "dataSourceId": {
          "description": "Data source id.",
          "type": "string"
        }
      },
      "id": "DataSource"
    },
    "Status": {
      "description": "The `Status` type defines a logical error model that is suitable for different\nprogramming environments, including REST APIs and RPC APIs. It is used by\n[gRPC](https://github.com/grpc). The error model is designed to be:\n\n- Simple to use and understand for most users\n- Flexible enough to meet unexpected needs\n\n# Overview\n\nThe `Status` message contains three pieces of data: error code, error message,\nand error details. The error code should be an enum value of\ngoogle.rpc.Code, but it may accept additional error codes if needed.  The\nerror message should be a developer-facing English message that helps\ndevelopers *understand* and *resolve* the error. If a localized user-facing\nerror message is needed, put the localized message in the error details or\nlocalize it in the client. The optional error details may contain arbitrary\ninformation about the error. There is a predefined set of error detail types\nin the package `google.rpc` that can be used for common error conditions.\n\n# Language mapping\n\nThe `Status` message is the logical representation of the error model, but it\nis not necessarily the actual wire format. When the `Status` message is\nexposed in different client libraries and different wire protocols, it can be\nmapped differently. For example, it will likely be mapped to some exceptions\nin Java, but more likely mapped to some error codes in C.\n\n# Other uses\n\nThe error model and the `Status` message can be used in a variety of\nenvironments, either with or without APIs, to provide a\nconsistent developer experience across different environments.\n\nExample uses of this error model include:\n\n- Partial errors. If a service needs to return partial errors to the client,\n    it may embed the `Status` in the normal response to indicate the partial\n    errors.\n\n- Workflow errors. A typical workflow has multiple steps. Each step may\n    have a `Status` message for error reporting.\n\n- Batch operations. If a client uses batch request and batch response, the\n    `Status` message should be used directly inside batch response, one for\n    each error sub-response.\n\n- Asynchronous operations. If an API call embeds asynchronous operation\n    results in its response, the status of those operations should be\n    represented directly using the `Status` message.\n\n- Logging. If some API errors are stored in logs, the message `Status` could\n    be used directly after any stripping needed for security/privacy reasons.",
      "type": "object",
      "properties": {
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "format": "int32",
          "type": "integer"
        },
        "message": {
          "description": "A developer-facing error message, which should be in English. Any\nuser-facing error message should be localized and sent in the\ngoogle.rpc.Status.details field, or localized by the client.",
          "type": "string"
        },
        "details": {
          "description": "A list of messages that carry the error details.  There is a common set of\nmessage types for APIs to use.",
          "type": "array",
          "items": {
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            },
            "type": "object"
          }
        }
      },
      "id": "Status"
    },
    "ScheduleTransferRunsRequest": {
      "description": "A request to schedule transfer runs for a time range.",
      "type": "object",
      "properties": {
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "User labels to add to the scheduled runs.",
          "type": "object"
        },
        "endTime": {
          "description": "End time of the range of transfer runs. For example,\n`\"2017-05-30T00:00:00+00:00\"`.",
          "format": "google-datetime",
          "type": "string"
        },
        "startTime": {
          "description": "Start time of the range of transfer runs. For example,\n`\"2017-05-25T00:00:00+00:00\"`.",
          "format": "google-datetime",
          "type": "string"
        }
      },
      "id": "ScheduleTransferRunsRequest"
    },
    "IsDataTransferServiceEnabledResponse": {
      "properties": {
        "enabled": {
          "description": "Indicates whether the data transfer service is enabled for the project.",
          "type": "boolean"
        }
      },
      "id": "IsDataTransferServiceEnabledResponse",
      "description": "A response to indicate whether data transfer service is enabled\nfor the project.",
      "type": "object"
    },
    "EnableDataTransferServiceRequest": {
      "properties": {},
      "id": "EnableDataTransferServiceRequest",
      "description": "A request to enable data transfer service for a project.",
      "type": "object"
    },
    "TransferConfig": {
      "description": "Represents a data transfer configuration. A transfer configuration\ncontains all metadata needed to perform a data transfer. For example,\n`destination_dataset_id` specifies where data should be stored.\nWhen a new transfer configuration is created, the specified\n`destination_dataset_id` is created when needed and shared with the\nappropriate data source service account.",
      "type": "object",
      "properties": {
        "params": {
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          },
          "description": "Data transfer specific parameters.",
          "type": "object"
        },
        "datasetRegion": {
          "description": "Output only. Region in which BigQuery dataset is located.",
          "type": "string"
        },
        "displayName": {
          "description": "User specified display name for the data transfer.",
          "type": "string"
        },
        "nextRunTime": {
          "description": "Output only. Next time when data transfer will run.",
          "format": "google-datetime",
          "type": "string"
        },
        "disabled": {
          "description": "Is this config disabled. When set to true, no runs are scheduled\nfor a given transfer.",
          "type": "boolean"
        },
        "schedule": {
          "description": "Data transfer schedule.\nIf the data source does not support a custom schedule, this should be\nempty. If it is empty, the default value for the data source will be\nused.\nThe specified times are in UTC.\nExamples of valid format:\n`1st,3rd monday of month 15:30`,\n`every wed,fri of jan,jun 13:15`, and\n`first sunday of quarter 00:00`.\nSee more explanation about the format here:\nhttps://cloud.google.com/appengine/docs/flexible/python/scheduling-jobs-with-cron-yaml#the_schedule_format\nNOTE: the granularity should be at least 8 hours, or less frequent.",
          "type": "string"
        },
        "updateTime": {
          "description": "Output only. Data transfer modification time. Ignored by server on input.",
          "format": "google-datetime",
          "type": "string"
        },
        "dataRefreshWindowDays": {
          "description": "The number of days to look back to automatically refresh the data.\nFor example, if `data_refresh_window_days = 10`, then every day\nBigQuery reingests data for [today-10, today-1], rather than ingesting data\nfor just [today-1].\nOnly valid if the data source supports the feature. Set the value to  0\nto use the default value.",
          "format": "int32",
          "type": "integer"
        },
        "dataSourceId": {
          "description": "Data source id. Cannot be changed once data transfer is created.",
          "type": "string"
        },
        "state": {
          "enumDescriptions": [
            "State placeholder.",
            "Data transfer is scheduled and is waiting to be picked up by\ndata transfer backend.",
            "Data transfer is in progress.",
            "Data transfer completed successsfully.",
            "Data transfer failed.",
            "Data transfer is cancelled."
          ],
          "enum": [
            "TRANSFER_STATE_UNSPECIFIED",
            "PENDING",
            "RUNNING",
            "SUCCEEDED",
            "FAILED",
            "CANCELLED"
          ],
          "description": "Output only. State of the most recently updated transfer run.",
          "type": "string"
        },
        "name": {
          "description": "The resource name of the transfer config.\nTransfer config names have the form\n`projects/{project_id}/transferConfigs/{config_id}`.\nWhere `config_id` is usually a uuid, even though it is not\nguaranteed or required. The name is ignored when creating a transfer\nconfig.",
          "type": "string"
        },
        "destinationDatasetId": {
          "description": "The BigQuery target dataset id.",
          "type": "string"
        },
        "userId": {
          "description": "Output only. Unique ID of the user on whose behalf transfer is done.\nApplicable only to data sources that do not support service accounts.\nWhen set to 0, the data source service account credentials are used.\nMay be negative. Note, that this identifier is not stable.\nIt may change over time even for the same user.",
          "format": "int64",
          "type": "string"
        }
      },
      "id": "TransferConfig"
    },
    "Credentials": {
      "description": "Credentials for User associated with a specific data source.",
      "type": "object",
      "properties": {
        "authToken": {
          "description": "Auth token which can be used to perform requests on behalf of the user.",
          "type": "string"
        },
        "name": {
          "description": "Name of this credentials object in the form\nprojects/-/locations/{location_id}/dataSources/{data_source_id}/credentials/{user_id}",
          "type": "string"
        }
      },
      "id": "Credentials"
    },
    "CheckValidCredsRequest": {
      "description": "A request to determine whether the user has valid credentials. This method\nis used to limit the number of OAuth popups in the user interface. The\nuser id is inferred from the API call context.\nIf the data source has the Google+ authorization type, this method\nreturns false, as it cannot be determined whether the credentials are\nalready valid merely based on the user id.",
      "type": "object",
      "properties": {},
      "id": "CheckValidCredsRequest"
    },
    "ScheduleTransferRunsResponse": {
      "properties": {
        "runs": {
          "description": "The transfer runs that were scheduled.",
          "type": "array",
          "items": {
            "$ref": "TransferRun"
          }
        }
      },
      "id": "ScheduleTransferRunsResponse",
      "description": "A response to schedule transfer runs for a time range.",
      "type": "object"
    },
    "ListTransferLogsResponse": {
      "description": "The returned list transfer run messages.",
      "type": "object",
      "properties": {
        "transferMessages": {
          "description": "Output only. The stored pipeline transfer messages.",
          "type": "array",
          "items": {
            "$ref": "TransferMessage"
          }
        },
        "nextPageToken": {
          "description": "Output only. The next-pagination token. For multiple-page list results,\nthis token can be used as the\n`GetTransferRunLogRequest.page_token`\nto request the next page of list results.",
          "type": "string"
        }
      },
      "id": "ListTransferLogsResponse"
    },
    "ListDataSourcesResponse": {
      "description": "Returns list of supported data sources and their metadata.",
      "type": "object",
      "properties": {
        "dataSources": {
          "description": "List of supported data sources and their transfer settings.",
          "type": "array",
          "items": {
            "$ref": "DataSource"
          }
        },
        "nextPageToken": {
          "description": "Output only. The next-pagination token. For multiple-page list results,\nthis token can be used as the\n`ListDataSourcesRequest.page_token`\nto request the next page of list results.",
          "type": "string"
        }
      },
      "id": "ListDataSourcesResponse"
    }
  },
  "protocol": "rest",
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "canonicalName": "BigQuery Data Transfer",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "View and manage your data across Google Cloud Platform services"
        },
        "https://www.googleapis.com/auth/bigquery": {
          "description": "View and manage your data in Google BigQuery"
        },
        "https://www.googleapis.com/auth/cloud-platform.read-only": {
          "description": "View your data across Google Cloud Platform services"
        }
      }
    }
  },
  "rootUrl": "https://bigquerydatatransfer.googleapis.com/",
  "ownerDomain": "google.com",
  "name": "bigquerydatatransfer",
  "batchPath": "batch",
  "fullyEncodeReservedExpansion": true,
  "title": "BigQuery Data Transfer API",
  "ownerName": "Google",
  "resources": {
    "projects": {
      "methods": {
        "isEnabled": {
          "response": {
            "$ref": "IsDataTransferServiceEnabledResponse"
          },
          "parameterOrder": [
            "name"
          ],
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/bigquery",
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/cloud-platform.read-only"
          ],
          "parameters": {
            "name": {
              "description": "The name of the project resource in the form:\n`projects/{project_id}`",
              "required": true,
              "type": "string",
              "pattern": "^projects/[^/]+$",
              "location": "path"
            }
          },
          "flatPath": "v1/projects/{projectsId}:isEnabled",
          "path": "v1/{+name}:isEnabled",
          "id": "bigquerydatatransfer.projects.isEnabled",
          "request": {
            "$ref": "IsDataTransferServiceEnabledRequest"
          },
          "description": "Returns true if data transfer is enabled for a project."
        }
      },
      "resources": {
        "locations": {
          "resources": {
            "dataSources": {
              "methods": {
                "get": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/dataSources/{dataSourcesId}",
                  "id": "bigquerydatatransfer.projects.locations.dataSources.get",
                  "path": "v1/{+name}",
                  "description": "Retrieves a supported data source and returns its settings,\nwhich can be used for UI rendering.",
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "DataSource"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "description": "The field will contain name of the resource requested, for example:\n`projects/{project_id}/dataSources/{data_source_id}`",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/dataSources/[^/]+$",
                      "location": "path"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/bigquery",
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/cloud-platform.read-only"
                  ]
                },
                "list": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/dataSources",
                  "id": "bigquerydatatransfer.projects.locations.dataSources.list",
                  "path": "v1/{+parent}/dataSources",
                  "description": "Lists supported data sources and returns their settings,\nwhich can be used for UI rendering.",
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "ListDataSourcesResponse"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "pageToken": {
                      "location": "query",
                      "description": "Pagination token, which can be used to request a specific page\nof `ListDataSourcesRequest` list results. For multiple-page\nresults, `ListDataSourcesResponse` outputs\na `next_page` token, which can be used as the\n`page_token` value to request the next page of list results.",
                      "type": "string"
                    },
                    "pageSize": {
                      "location": "query",
                      "description": "Page size. The default page size is the maximum value of 1000 results.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "parent": {
                      "location": "path",
                      "description": "The BigQuery project id for which data sources should be returned.\nMust be in the form: `projects/{project_id}`",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/bigquery",
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/cloud-platform.read-only"
                  ]
                },
                "checkValidCreds": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/dataSources/{dataSourcesId}:checkValidCreds",
                  "path": "v1/{+name}:checkValidCreds",
                  "id": "bigquerydatatransfer.projects.locations.dataSources.checkValidCreds",
                  "description": "Returns true if valid credentials exist for the given data source and\nrequesting user.\nSome data sources doesn't support service account, so we need to talk to\nthem on behalf of the end user. This API just checks whether we have OAuth\ntoken for the particular user, which is a pre-requisite before user can\ncreate a transfer config.",
                  "request": {
                    "$ref": "CheckValidCredsRequest"
                  },
                  "response": {
                    "$ref": "CheckValidCredsResponse"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "POST",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "description": "The data source in the form:\n`projects/{project_id}/dataSources/{data_source_id}`",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/dataSources/[^/]+$"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/bigquery",
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/cloud-platform.read-only"
                  ]
                }
              },
              "resources": {
                "credentials": {
                  "methods": {
                    "get": {
                      "response": {
                        "$ref": "Credentials"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/bigquery",
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "name": {
                          "location": "path",
                          "description": "Name of this credentials object in the form\nprojects/-/locations/{location_id}/dataSources/{data_source_id}/credentials/{user_id}",
                          "required": true,
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/dataSources/[^/]+/credentials/[^/]+$"
                        }
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/dataSources/{dataSourcesId}/credentials/{credentialsId}",
                      "path": "v1/{+name}",
                      "id": "bigquerydatatransfer.projects.locations.dataSources.credentials.get",
                      "description": "Get user authentication token so that the data source can perform\noperations on behalf of the user.\nCan only be called by configured data source service account.\nIn all other cases - it will fail with permission denied error."
                    }
                  }
                }
              }
            },
            "transferConfigs": {
              "methods": {
                "list": {
                  "description": "Returns information about all data transfers in the project.",
                  "response": {
                    "$ref": "ListTransferConfigsResponse"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/bigquery",
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/cloud-platform.read-only"
                  ],
                  "parameters": {
                    "pageToken": {
                      "description": "Pagination token, which can be used to request a specific page\nof `ListTransfersRequest` list results. For multiple-page\nresults, `ListTransfersResponse` outputs\na `next_page` token, which can be used as the\n`page_token` value to request the next page of list results.",
                      "type": "string",
                      "location": "query"
                    },
                    "pageSize": {
                      "description": "Page size. The default page size is the maximum value of 1000 results.",
                      "format": "int32",
                      "type": "integer",
                      "location": "query"
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "description": "The BigQuery project id for which data sources\nshould be returned: `projects/{project_id}`.",
                      "required": true,
                      "type": "string"
                    },
                    "dataSourceIds": {
                      "description": "When specified, only configurations of requested data sources are returned.",
                      "type": "string",
                      "repeated": true,
                      "location": "query"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/transferConfigs",
                  "path": "v1/{+parent}/transferConfigs",
                  "id": "bigquerydatatransfer.projects.locations.transferConfigs.list"
                },
                "create": {
                  "description": "Creates a new data transfer configuration.",
                  "request": {
                    "$ref": "TransferConfig"
                  },
                  "response": {
                    "$ref": "TransferConfig"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "description": "The BigQuery project id where the transfer configuration should be created.\nMust be in the format projects/{project_id}/locations/{location_id}\nIf specified location and location of the destination bigquery dataset\ndo not match - the request will fail.",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path"
                    },
                    "authorizationCode": {
                      "description": "Optional OAuth2 authorization code to use with this transfer configuration.\nThis is required if new credentials are needed, as indicated by\n`CheckValidCreds`.\nIn order to obtain authorization_code, please make a\nrequest to\nhttps://www.gstatic.com/bigquerydatatransfer/oauthz/auth?client_id=\u003cdatatransferapiclientid\u003e&scope=\u003cdata_source_scopes\u003e&redirect_uri=\u003credirect_uri\u003e\n\n* client_id should be OAuth client_id of BigQuery DTS API for the given\n  data source returned by ListDataSources method.\n* data_source_scopes are the scopes returned by ListDataSources method.\n* redirect_uri is an optional parameter. If not specified, then\n  authorization code is posted to the opener of authorization flow window.\n  Otherwise it will be sent to the redirect uri. A special value of\n  urn:ietf:wg:oauth:2.0:oob means that authorization code should be\n  returned in the title bar of the browser, with the page text prompting\n  the user to copy the code and paste it in the application.",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/transferConfigs",
                  "path": "v1/{+parent}/transferConfigs",
                  "id": "bigquerydatatransfer.projects.locations.transferConfigs.create"
                },
                "scheduleRuns": {
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ScheduleTransferRunsResponse"
                  },
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "description": "Transfer configuration name in the form:\n`projects/{project_id}/transferConfigs/{config_id}`.",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/transferConfigs/[^/]+$"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/bigquery",
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/transferConfigs/{transferConfigsId}:scheduleRuns",
                  "id": "bigquerydatatransfer.projects.locations.transferConfigs.scheduleRuns",
                  "path": "v1/{+parent}:scheduleRuns",
                  "description": "Creates transfer runs for a time range [start_time, end_time].\nFor each date - or whatever granularity the data source supports - in the\nrange, one transfer run is created.\nNote that runs are created per UTC time in the time range.",
                  "request": {
                    "$ref": "ScheduleTransferRunsRequest"
                  }
                },
                "patch": {
                  "description": "Updates a data transfer configuration.\nAll fields must be set, even if they are not updated.",
                  "request": {
                    "$ref": "TransferConfig"
                  },
                  "httpMethod": "PATCH",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "TransferConfig"
                  },
                  "parameters": {
                    "authorizationCode": {
                      "location": "query",
                      "description": "Optional OAuth2 authorization code to use with this transfer configuration.\nIf it is provided, the transfer configuration will be associated with the\nauthorizing user.\nIn order to obtain authorization_code, please make a\nrequest to\nhttps://www.gstatic.com/bigquerydatatransfer/oauthz/auth?client_id=\u003cdatatransferapiclientid\u003e&scope=\u003cdata_source_scopes\u003e&redirect_uri=\u003credirect_uri\u003e\n\n* client_id should be OAuth client_id of BigQuery DTS API for the given\n  data source returned by ListDataSources method.\n* data_source_scopes are the scopes returned by ListDataSources method.\n* redirect_uri is an optional parameter. If not specified, then\n  authorization code is posted to the opener of authorization flow window.\n  Otherwise it will be sent to the redirect uri. A special value of\n  urn:ietf:wg:oauth:2.0:oob means that authorization code should be\n  returned in the title bar of the browser, with the page text prompting\n  the user to copy the code and paste it in the application.",
                      "type": "string"
                    },
                    "updateMask": {
                      "location": "query",
                      "description": "Required list of fields to be updated in this request.",
                      "format": "google-fieldmask",
                      "type": "string"
                    },
                    "name": {
                      "description": "The resource name of the transfer config.\nTransfer config names have the form\n`projects/{project_id}/transferConfigs/{config_id}`.\nWhere `config_id` is usually a uuid, even though it is not\nguaranteed or required. The name is ignored when creating a transfer\nconfig.",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/transferConfigs/[^/]+$",
                      "location": "path"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/transferConfigs/{transferConfigsId}",
                  "id": "bigquerydatatransfer.projects.locations.transferConfigs.patch",
                  "path": "v1/{+name}"
                },
                "get": {
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "TransferConfig"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "description": "The field will contain name of the resource requested, for example:\n`projects/{project_id}/transferConfigs/{config_id}`",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/transferConfigs/[^/]+$",
                      "location": "path"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/bigquery",
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/cloud-platform.read-only"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/transferConfigs/{transferConfigsId}",
                  "id": "bigquerydatatransfer.projects.locations.transferConfigs.get",
                  "path": "v1/{+name}",
                  "description": "Returns information about a data transfer config."
                },
                "delete": {
                  "path": "v1/{+name}",
                  "id": "bigquerydatatransfer.projects.locations.transferConfigs.delete",
                  "description": "Deletes a data transfer configuration,\nincluding any associated transfer runs and logs.",
                  "response": {
                    "$ref": "Empty"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/transferConfigs/[^/]+$",
                      "location": "path",
                      "description": "The field will contain name of the resource requested, for example:\n`projects/{project_id}/transferConfigs/{config_id}`",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/bigquery",
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/transferConfigs/{transferConfigsId}"
                }
              },
              "resources": {
                "runs": {
                  "resources": {
                    "transferLogs": {
                      "methods": {
                        "list": {
                          "httpMethod": "GET",
                          "response": {
                            "$ref": "ListTransferLogsResponse"
                          },
                          "parameterOrder": [
                            "parent"
                          ],
                          "parameters": {
                            "pageToken": {
                              "description": "Pagination token, which can be used to request a specific page\nof `ListTransferLogsRequest` list results. For multiple-page\nresults, `ListTransferLogsResponse` outputs\na `next_page` token, which can be used as the\n`page_token` value to request the next page of list results.",
                              "type": "string",
                              "location": "query"
                            },
                            "pageSize": {
                              "location": "query",
                              "description": "Page size. The default page size is the maximum value of 1000 results.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "messageTypes": {
                              "enum": [
                                "MESSAGE_SEVERITY_UNSPECIFIED",
                                "INFO",
                                "WARNING",
                                "ERROR",
                                "DEBUG"
                              ],
                              "description": "Message types to return. If not populated - INFO, WARNING and ERROR\nmessages are returned.",
                              "type": "string",
                              "repeated": true,
                              "location": "query"
                            },
                            "parent": {
                              "description": "Transfer run name in the form:\n`projects/{project_id}/transferConfigs/{config_Id}/runs/{run_id}`.",
                              "required": true,
                              "type": "string",
                              "pattern": "^projects/[^/]+/locations/[^/]+/transferConfigs/[^/]+/runs/[^/]+$",
                              "location": "path"
                            }
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/bigquery",
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/cloud-platform.read-only"
                          ],
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/transferConfigs/{transferConfigsId}/runs/{runsId}/transferLogs",
                          "id": "bigquerydatatransfer.projects.locations.transferConfigs.runs.transferLogs.list",
                          "path": "v1/{+parent}/transferLogs",
                          "description": "Returns user facing log messages for the data transfer run."
                        }
                      }
                    }
                  },
                  "methods": {
                    "startBigQueryJobs": {
                      "response": {
                        "$ref": "Empty"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "httpMethod": "POST",
                      "scopes": [
                        "https://www.googleapis.com/auth/bigquery",
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "name": {
                          "description": "Name of the resource in the form:\n\"projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}/runs/{run_id}\"",
                          "required": true,
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/transferConfigs/[^/]+/runs/[^/]+$",
                          "location": "path"
                        }
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/transferConfigs/{transferConfigsId}/runs/{runsId}:startBigQueryJobs",
                      "path": "v1/{+name}:startBigQueryJobs",
                      "id": "bigquerydatatransfer.projects.locations.transferConfigs.runs.startBigQueryJobs",
                      "request": {
                        "$ref": "StartBigQueryJobsRequest"
                      },
                      "description": "Notify the Data Transfer Service that data is ready for loading.\nThe Data Transfer Service will start and monitor multiple BigQuery Load\njobs for a transfer run. Monitored jobs will be automatically retried\nand produce log messages when starting and finishing a job.\nCan be called multiple times for the same transfer run."
                    },
                    "get": {
                      "response": {
                        "$ref": "TransferRun"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "httpMethod": "GET",
                      "parameters": {
                        "name": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/transferConfigs/[^/]+/runs/[^/]+$",
                          "location": "path",
                          "description": "The field will contain name of the resource requested, for example:\n`projects/{project_id}/transferConfigs/{config_id}/runs/{run_id}`",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/bigquery",
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/cloud-platform.read-only"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/transferConfigs/{transferConfigsId}/runs/{runsId}",
                      "path": "v1/{+name}",
                      "id": "bigquerydatatransfer.projects.locations.transferConfigs.runs.get",
                      "description": "Returns information about the particular transfer run."
                    },
                    "patch": {
                      "path": "v1/{+name}",
                      "id": "bigquerydatatransfer.projects.locations.transferConfigs.runs.patch",
                      "description": "Update a transfer run. If successful, resets\ndata_source.update_deadline_seconds timer.",
                      "request": {
                        "$ref": "TransferRun"
                      },
                      "response": {
                        "$ref": "TransferRun"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "httpMethod": "PATCH",
                      "parameters": {
                        "updateMask": {
                          "location": "query",
                          "description": "Required list of fields to be updated in this request.",
                          "format": "google-fieldmask",
                          "type": "string"
                        },
                        "name": {
                          "location": "path",
                          "description": "The resource name of the transfer run.\nTransfer run names have the form\n`projects/{project_id}/locations/{location}/transferConfigs/{config_id}/runs/{run_id}`.\nThe name is ignored when creating a transfer run.",
                          "required": true,
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/transferConfigs/[^/]+/runs/[^/]+$"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/bigquery",
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/transferConfigs/{transferConfigsId}/runs/{runsId}"
                    },
                    "logMessages": {
                      "path": "v1/{+name}:logMessages",
                      "id": "bigquerydatatransfer.projects.locations.transferConfigs.runs.logMessages",
                      "request": {
                        "$ref": "LogTransferRunMessagesRequest"
                      },
                      "description": "Log messages for a transfer run. If successful (at least 1 message), resets\ndata_source.update_deadline_seconds timer.",
                      "response": {
                        "$ref": "Empty"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "httpMethod": "POST",
                      "scopes": [
                        "https://www.googleapis.com/auth/bigquery",
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "name": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/transferConfigs/[^/]+/runs/[^/]+$",
                          "location": "path",
                          "description": "Name of the resource in the form:\n\"projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}/runs/{run_id}\"",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/transferConfigs/{transferConfigsId}/runs/{runsId}:logMessages"
                    },
                    "finishRun": {
                      "response": {
                        "$ref": "Empty"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "httpMethod": "POST",
                      "scopes": [
                        "https://www.googleapis.com/auth/bigquery",
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "name": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/transferConfigs/[^/]+/runs/[^/]+$",
                          "location": "path",
                          "description": "Name of the resource in the form:\n\"projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}/runs/{run_id}\"",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/transferConfigs/{transferConfigsId}/runs/{runsId}:finishRun",
                      "path": "v1/{+name}:finishRun",
                      "id": "bigquerydatatransfer.projects.locations.transferConfigs.runs.finishRun",
                      "request": {
                        "$ref": "FinishRunRequest"
                      },
                      "description": "Notify the Data Transfer Service that the data source is done processing\nthe run. No more status updates or requests to start/monitor jobs will be\naccepted. The run will be finalized by the Data Transfer Service when all\nmonitored jobs are completed.\nDoes not need to be called if the run is set to FAILED."
                    },
                    "delete": {
                      "description": "Deletes the specified transfer run.",
                      "response": {
                        "$ref": "Empty"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "httpMethod": "DELETE",
                      "scopes": [
                        "https://www.googleapis.com/auth/bigquery",
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "name": {
                          "description": "The field will contain name of the resource requested, for example:\n`projects/{project_id}/transferConfigs/{config_id}/runs/{run_id}`",
                          "required": true,
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/transferConfigs/[^/]+/runs/[^/]+$",
                          "location": "path"
                        }
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/transferConfigs/{transferConfigsId}/runs/{runsId}",
                      "path": "v1/{+name}",
                      "id": "bigquerydatatransfer.projects.locations.transferConfigs.runs.delete"
                    },
                    "list": {
                      "httpMethod": "GET",
                      "parameterOrder": [
                        "parent"
                      ],
                      "response": {
                        "$ref": "ListTransferRunsResponse"
                      },
                      "parameters": {
                        "pageToken": {
                          "location": "query",
                          "description": "Pagination token, which can be used to request a specific page\nof `ListTransferRunsRequest` list results. For multiple-page\nresults, `ListTransferRunsResponse` outputs\na `next_page` token, which can be used as the\n`page_token` value to request the next page of list results.",
                          "type": "string"
                        },
                        "states": {
                          "repeated": true,
                          "location": "query",
                          "enum": [
                            "TRANSFER_STATE_UNSPECIFIED",
                            "PENDING",
                            "RUNNING",
                            "SUCCEEDED",
                            "FAILED",
                            "CANCELLED"
                          ],
                          "description": "When specified, only transfer runs with requested states are returned.",
                          "type": "string"
                        },
                        "pageSize": {
                          "description": "Page size. The default page size is the maximum value of 1000 results.",
                          "format": "int32",
                          "type": "integer",
                          "location": "query"
                        },
                        "runAttempt": {
                          "description": "Indicates how run attempts are to be pulled.",
                          "type": "string",
                          "location": "query",
                          "enum": [
                            "RUN_ATTEMPT_UNSPECIFIED",
                            "LATEST"
                          ]
                        },
                        "parent": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/transferConfigs/[^/]+$",
                          "location": "path",
                          "description": "Name of transfer configuration for which transfer runs should be retrieved.\nFormat of transfer configuration resource name is:\n`projects/{project_id}/transferConfigs/{config_id}`.",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/bigquery",
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/cloud-platform.read-only"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/transferConfigs/{transferConfigsId}/runs",
                      "id": "bigquerydatatransfer.projects.locations.transferConfigs.runs.list",
                      "path": "v1/{+parent}/runs",
                      "description": "Returns information about running and completed jobs."
                    }
                  }
                }
              }
            },
            "dataSourceDefinitions": {
              "methods": {
                "create": {
                  "request": {
                    "$ref": "DataSourceDefinition"
                  },
                  "description": "Create a data source definition.  Calling this method will automatically\nuse your credentials to create the following Google Cloud resources in\nYOUR Google Cloud project.\n1. OAuth client\n2. Pub/Sub Topics and Subscriptions in each supported_location_ids\nprojects/{project_id}/{topics|subscriptions}/bigquerydatatransfer.{data_source_id}.{location_id}.run",
                  "response": {
                    "$ref": "DataSourceDefinition"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "parent": {
                      "description": "The BigQuery project id for which data source definition is associated.\nMust be in the form: `projects/{project_id}/locations/{location_id}`",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/dataSourceDefinitions",
                  "path": "v1/{+parent}/dataSourceDefinitions",
                  "id": "bigquerydatatransfer.projects.locations.dataSourceDefinitions.create"
                },
                "patch": {
                  "response": {
                    "$ref": "DataSourceDefinition"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "PATCH",
                  "parameters": {
                    "updateMask": {
                      "description": "Update field mask.",
                      "format": "google-fieldmask",
                      "type": "string",
                      "location": "query"
                    },
                    "name": {
                      "description": "The resource name of the data source definition.\nData source definition names have the form\n`projects/{project_id}/locations/{location}/dataSourceDefinitions/{data_source_id}`.",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/dataSourceDefinitions/[^/]+$",
                      "location": "path"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/dataSourceDefinitions/{dataSourceDefinitionsId}",
                  "path": "v1/{+name}",
                  "id": "bigquerydatatransfer.projects.locations.dataSourceDefinitions.patch",
                  "description": "Update an existing data source definition. If changing\nsupported_location_ids, triggers same effects as mentioned in \"Create a\ndata source definition.\"",
                  "request": {
                    "$ref": "DataSourceDefinition"
                  }
                },
                "get": {
                  "path": "v1/{+name}",
                  "id": "bigquerydatatransfer.projects.locations.dataSourceDefinitions.get",
                  "description": "Retrieves an existing data source definition.",
                  "response": {
                    "$ref": "DataSourceDefinition"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/dataSourceDefinitions/[^/]+$",
                      "location": "path",
                      "description": "The field will contain name of the resource requested.",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/dataSourceDefinitions/{dataSourceDefinitionsId}"
                },
                "list": {
                  "response": {
                    "$ref": "ListDataSourceDefinitionsResponse"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "GET",
                  "parameters": {
                    "pageToken": {
                      "location": "query",
                      "description": "Pagination token, which can be used to request a specific page\nof `ListDataSourceDefinitionsRequest` list results. For multiple-page\nresults, `ListDataSourceDefinitionsResponse` outputs a `next_page` token,\nwhich can be used as the `page_token` value to request the next page of\nthe list results.",
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "Page size. The default page size is the maximum value of 1000 results.",
                      "format": "int32",
                      "type": "integer",
                      "location": "query"
                    },
                    "parent": {
                      "location": "path",
                      "description": "The BigQuery project id for which data sources should be returned.\nMust be in the form: `projects/{project_id}/locations/{location_id}`",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/dataSourceDefinitions",
                  "path": "v1/{+parent}/dataSourceDefinitions",
                  "id": "bigquerydatatransfer.projects.locations.dataSourceDefinitions.list",
                  "description": "Lists supported data source definitions."
                }
              }
            }
          },
          "methods": {
            "enableDataTransferService": {
              "request": {
                "$ref": "EnableDataTransferServiceRequest"
              },
              "description": "Enables data transfer service for a given project. This\nmethod requires the additional scope of\n'https://www.googleapis.com/auth/cloudplatformprojects'\nto manage the cloud project permissions.",
              "response": {
                "$ref": "Empty"
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "POST",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "name": {
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "location": "path",
                  "description": "The name of the project resource in the form:\n`projects/{project_id}`",
                  "required": true,
                  "type": "string"
                }
              },
              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}:enableDataTransferService",
              "path": "v1/{+name}:enableDataTransferService",
              "id": "bigquerydatatransfer.projects.locations.enableDataTransferService"
            },
            "isDataTransferServiceEnabled": {
              "description": "Returns true if data transfer is enabled for a project.",
              "request": {
                "$ref": "IsDataTransferServiceEnabledRequest"
              },
              "httpMethod": "POST",
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "IsDataTransferServiceEnabledResponse"
              },
              "parameters": {
                "name": {
                  "description": "The name of the project resource in the form:\n`projects/{project_id}`",
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "location": "path"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/bigquery",
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/cloud-platform.read-only"
              ],
              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}:isDataTransferServiceEnabled",
              "id": "bigquerydatatransfer.projects.locations.isDataTransferServiceEnabled",
              "path": "v1/{+name}:isDataTransferServiceEnabled"
            },
            "list": {
              "description": "Lists information about the supported locations for this service.",
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/bigquery",
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/cloud-platform.read-only"
              ],
              "parameters": {
                "filter": {
                  "location": "query",
                  "description": "The standard list filter.",
                  "type": "string"
                },
                "name": {
                  "description": "The resource that owns the locations collection, if applicable.",
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+$",
                  "location": "path"
                },
                "pageToken": {
                  "description": "The standard list page token.",
                  "type": "string",
                  "location": "query"
                },
                "pageSize": {
                  "location": "query",
                  "description": "The standard list page size.",
                  "format": "int32",
                  "type": "integer"
                }
              },
              "flatPath": "v1/projects/{projectsId}/locations",
              "path": "v1/{+name}/locations",
              "id": "bigquerydatatransfer.projects.locations.list"
            },
            "get": {
              "description": "Gets information about a location.",
              "response": {
                "$ref": "Location"
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "description": "Resource name for the location.",
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "location": "path"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/bigquery",
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/cloud-platform.read-only"
              ],
              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}",
              "path": "v1/{+name}",
              "id": "bigquerydatatransfer.projects.locations.get"
            }
          }
        },
        "dataSources": {
          "methods": {
            "get": {
              "description": "Retrieves a supported data source and returns its settings,\nwhich can be used for UI rendering.",
              "response": {
                "$ref": "DataSource"
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "description": "The field will contain name of the resource requested, for example:\n`projects/{project_id}/dataSources/{data_source_id}`",
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+/dataSources/[^/]+$",
                  "location": "path"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/bigquery",
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/cloud-platform.read-only"
              ],
              "flatPath": "v1/projects/{projectsId}/dataSources/{dataSourcesId}",
              "path": "v1/{+name}",
              "id": "bigquerydatatransfer.projects.dataSources.get"
            },
            "list": {
              "description": "Lists supported data sources and returns their settings,\nwhich can be used for UI rendering.",
              "httpMethod": "GET",
              "response": {
                "$ref": "ListDataSourcesResponse"
              },
              "parameterOrder": [
                "parent"
              ],
              "parameters": {
                "pageToken": {
                  "description": "Pagination token, which can be used to request a specific page\nof `ListDataSourcesRequest` list results. For multiple-page\nresults, `ListDataSourcesResponse` outputs\na `next_page` token, which can be used as the\n`page_token` value to request the next page of list results.",
                  "type": "string",
                  "location": "query"
                },
                "pageSize": {
                  "location": "query",
                  "description": "Page size. The default page size is the maximum value of 1000 results.",
                  "format": "int32",
                  "type": "integer"
                },
                "parent": {
                  "location": "path",
                  "description": "The BigQuery project id for which data sources should be returned.\nMust be in the form: `projects/{project_id}`",
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+$"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/bigquery",
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/cloud-platform.read-only"
              ],
              "flatPath": "v1/projects/{projectsId}/dataSources",
              "id": "bigquerydatatransfer.projects.dataSources.list",
              "path": "v1/{+parent}/dataSources"
            },
            "checkValidCreds": {
              "response": {
                "$ref": "CheckValidCredsResponse"
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "POST",
              "parameters": {
                "name": {
                  "location": "path",
                  "description": "The data source in the form:\n`projects/{project_id}/dataSources/{data_source_id}`",
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+/dataSources/[^/]+$"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/bigquery",
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/cloud-platform.read-only"
              ],
              "flatPath": "v1/projects/{projectsId}/dataSources/{dataSourcesId}:checkValidCreds",
              "path": "v1/{+name}:checkValidCreds",
              "id": "bigquerydatatransfer.projects.dataSources.checkValidCreds",
              "description": "Returns true if valid credentials exist for the given data source and\nrequesting user.\nSome data sources doesn't support service account, so we need to talk to\nthem on behalf of the end user. This API just checks whether we have OAuth\ntoken for the particular user, which is a pre-requisite before user can\ncreate a transfer config.",
              "request": {
                "$ref": "CheckValidCredsRequest"
              }
            }
          }
        },
        "transferConfigs": {
          "methods": {
            "list": {
              "httpMethod": "GET",
              "response": {
                "$ref": "ListTransferConfigsResponse"
              },
              "parameterOrder": [
                "parent"
              ],
              "parameters": {
                "pageToken": {
                  "location": "query",
                  "description": "Pagination token, which can be used to request a specific page\nof `ListTransfersRequest` list results. For multiple-page\nresults, `ListTransfersResponse` outputs\na `next_page` token, which can be used as the\n`page_token` value to request the next page of list results.",
                  "type": "string"
                },
                "pageSize": {
                  "location": "query",
                  "description": "Page size. The default page size is the maximum value of 1000 results.",
                  "format": "int32",
                  "type": "integer"
                },
                "parent": {
                  "pattern": "^projects/[^/]+$",
                  "location": "path",
                  "description": "The BigQuery project id for which data sources\nshould be returned: `projects/{project_id}`.",
                  "required": true,
                  "type": "string"
                },
                "dataSourceIds": {
                  "repeated": true,
                  "location": "query",
                  "description": "When specified, only configurations of requested data sources are returned.",
                  "type": "string"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/bigquery",
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/cloud-platform.read-only"
              ],
              "flatPath": "v1/projects/{projectsId}/transferConfigs",
              "id": "bigquerydatatransfer.projects.transferConfigs.list",
              "path": "v1/{+parent}/transferConfigs",
              "description": "Returns information about all data transfers in the project."
            },
            "create": {
              "request": {
                "$ref": "TransferConfig"
              },
              "description": "Creates a new data transfer configuration.",
              "response": {
                "$ref": "TransferConfig"
              },
              "parameterOrder": [
                "parent"
              ],
              "httpMethod": "POST",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "authorizationCode": {
                  "description": "Optional OAuth2 authorization code to use with this transfer configuration.\nThis is required if new credentials are needed, as indicated by\n`CheckValidCreds`.\nIn order to obtain authorization_code, please make a\nrequest to\nhttps://www.gstatic.com/bigquerydatatransfer/oauthz/auth?client_id=\u003cdatatransferapiclientid\u003e&scope=\u003cdata_source_scopes\u003e&redirect_uri=\u003credirect_uri\u003e\n\n* client_id should be OAuth client_id of BigQuery DTS API for the given\n  data source returned by ListDataSources method.\n* data_source_scopes are the scopes returned by ListDataSources method.\n* redirect_uri is an optional parameter. If not specified, then\n  authorization code is posted to the opener of authorization flow window.\n  Otherwise it will be sent to the redirect uri. A special value of\n  urn:ietf:wg:oauth:2.0:oob means that authorization code should be\n  returned in the title bar of the browser, with the page text prompting\n  the user to copy the code and paste it in the application.",
                  "type": "string",
                  "location": "query"
                },
                "parent": {
                  "pattern": "^projects/[^/]+$",
                  "location": "path",
                  "description": "The BigQuery project id where the transfer configuration should be created.\nMust be in the format projects/{project_id}/locations/{location_id}\nIf specified location and location of the destination bigquery dataset\ndo not match - the request will fail.",
                  "required": true,
                  "type": "string"
                }
              },
              "flatPath": "v1/projects/{projectsId}/transferConfigs",
              "path": "v1/{+parent}/transferConfigs",
              "id": "bigquerydatatransfer.projects.transferConfigs.create"
            },
            "scheduleRuns": {
              "request": {
                "$ref": "ScheduleTransferRunsRequest"
              },
              "description": "Creates transfer runs for a time range [start_time, end_time].\nFor each date - or whatever granularity the data source supports - in the\nrange, one transfer run is created.\nNote that runs are created per UTC time in the time range.",
              "response": {
                "$ref": "ScheduleTransferRunsResponse"
              },
              "parameterOrder": [
                "parent"
              ],
              "httpMethod": "POST",
              "scopes": [
                "https://www.googleapis.com/auth/bigquery",
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "parent": {
                  "pattern": "^projects/[^/]+/transferConfigs/[^/]+$",
                  "location": "path",
                  "description": "Transfer configuration name in the form:\n`projects/{project_id}/transferConfigs/{config_id}`.",
                  "required": true,
                  "type": "string"
                }
              },
              "flatPath": "v1/projects/{projectsId}/transferConfigs/{transferConfigsId}:scheduleRuns",
              "path": "v1/{+parent}:scheduleRuns",
              "id": "bigquerydatatransfer.projects.transferConfigs.scheduleRuns"
            },
            "patch": {
              "description": "Updates a data transfer configuration.\nAll fields must be set, even if they are not updated.",
              "request": {
                "$ref": "TransferConfig"
              },
              "httpMethod": "PATCH",
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "TransferConfig"
              },
              "parameters": {
                "updateMask": {
                  "description": "Required list of fields to be updated in this request.",
                  "format": "google-fieldmask",
                  "type": "string",
                  "location": "query"
                },
                "name": {
                  "description": "The resource name of the transfer config.\nTransfer config names have the form\n`projects/{project_id}/transferConfigs/{config_id}`.\nWhere `config_id` is usually a uuid, even though it is not\nguaranteed or required. The name is ignored when creating a transfer\nconfig.",
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+/transferConfigs/[^/]+$",
                  "location": "path"
                },
                "authorizationCode": {
                  "location": "query",
                  "description": "Optional OAuth2 authorization code to use with this transfer configuration.\nIf it is provided, the transfer configuration will be associated with the\nauthorizing user.\nIn order to obtain authorization_code, please make a\nrequest to\nhttps://www.gstatic.com/bigquerydatatransfer/oauthz/auth?client_id=\u003cdatatransferapiclientid\u003e&scope=\u003cdata_source_scopes\u003e&redirect_uri=\u003credirect_uri\u003e\n\n* client_id should be OAuth client_id of BigQuery DTS API for the given\n  data source returned by ListDataSources method.\n* data_source_scopes are the scopes returned by ListDataSources method.\n* redirect_uri is an optional parameter. If not specified, then\n  authorization code is posted to the opener of authorization flow window.\n  Otherwise it will be sent to the redirect uri. A special value of\n  urn:ietf:wg:oauth:2.0:oob means that authorization code should be\n  returned in the title bar of the browser, with the page text prompting\n  the user to copy the code and paste it in the application.",
                  "type": "string"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1/projects/{projectsId}/transferConfigs/{transferConfigsId}",
              "id": "bigquerydatatransfer.projects.transferConfigs.patch",
              "path": "v1/{+name}"
            },
            "get": {
              "response": {
                "$ref": "TransferConfig"
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "description": "The field will contain name of the resource requested, for example:\n`projects/{project_id}/transferConfigs/{config_id}`",
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+/transferConfigs/[^/]+$",
                  "location": "path"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/bigquery",
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/cloud-platform.read-only"
              ],
              "flatPath": "v1/projects/{projectsId}/transferConfigs/{transferConfigsId}",
              "path": "v1/{+name}",
              "id": "bigquerydatatransfer.projects.transferConfigs.get",
              "description": "Returns information about a data transfer config."
            },
            "delete": {
              "httpMethod": "DELETE",
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "Empty"
              },
              "parameters": {
                "name": {
                  "description": "The field will contain name of the resource requested, for example:\n`projects/{project_id}/transferConfigs/{config_id}`",
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+/transferConfigs/[^/]+$",
                  "location": "path"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/bigquery",
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1/projects/{projectsId}/transferConfigs/{transferConfigsId}",
              "id": "bigquerydatatransfer.projects.transferConfigs.delete",
              "path": "v1/{+name}",
              "description": "Deletes a data transfer configuration,\nincluding any associated transfer runs and logs."
            }
          },
          "resources": {
            "runs": {
              "methods": {
                "delete": {
                  "description": "Deletes the specified transfer run.",
                  "httpMethod": "DELETE",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Empty"
                  },
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/transferConfigs/[^/]+/runs/[^/]+$",
                      "location": "path",
                      "description": "The field will contain name of the resource requested, for example:\n`projects/{project_id}/transferConfigs/{config_id}/runs/{run_id}`",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/bigquery",
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/transferConfigs/{transferConfigsId}/runs/{runsId}",
                  "id": "bigquerydatatransfer.projects.transferConfigs.runs.delete",
                  "path": "v1/{+name}"
                },
                "get": {
                  "flatPath": "v1/projects/{projectsId}/transferConfigs/{transferConfigsId}/runs/{runsId}",
                  "path": "v1/{+name}",
                  "id": "bigquerydatatransfer.projects.transferConfigs.runs.get",
                  "description": "Returns information about the particular transfer run.",
                  "response": {
                    "$ref": "TransferRun"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "description": "The field will contain name of the resource requested, for example:\n`projects/{project_id}/transferConfigs/{config_id}/runs/{run_id}`",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/transferConfigs/[^/]+/runs/[^/]+$"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/bigquery",
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/cloud-platform.read-only"
                  ]
                },
                "list": {
                  "response": {
                    "$ref": "ListTransferRunsResponse"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/bigquery",
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/cloud-platform.read-only"
                  ],
                  "parameters": {
                    "pageToken": {
                      "location": "query",
                      "description": "Pagination token, which can be used to request a specific page\nof `ListTransferRunsRequest` list results. For multiple-page\nresults, `ListTransferRunsResponse` outputs\na `next_page` token, which can be used as the\n`page_token` value to request the next page of list results.",
                      "type": "string"
                    },
                    "states": {
                      "enum": [
                        "TRANSFER_STATE_UNSPECIFIED",
                        "PENDING",
                        "RUNNING",
                        "SUCCEEDED",
                        "FAILED",
                        "CANCELLED"
                      ],
                      "description": "When specified, only transfer runs with requested states are returned.",
                      "type": "string",
                      "repeated": true,
                      "location": "query"
                    },
                    "pageSize": {
                      "description": "Page size. The default page size is the maximum value of 1000 results.",
                      "format": "int32",
                      "type": "integer",
                      "location": "query"
                    },
                    "runAttempt": {
                      "location": "query",
                      "enum": [
                        "RUN_ATTEMPT_UNSPECIFIED",
                        "LATEST"
                      ],
                      "description": "Indicates how run attempts are to be pulled.",
                      "type": "string"
                    },
                    "parent": {
                      "description": "Name of transfer configuration for which transfer runs should be retrieved.\nFormat of transfer configuration resource name is:\n`projects/{project_id}/transferConfigs/{config_id}`.",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/transferConfigs/[^/]+$",
                      "location": "path"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/transferConfigs/{transferConfigsId}/runs",
                  "path": "v1/{+parent}/runs",
                  "id": "bigquerydatatransfer.projects.transferConfigs.runs.list",
                  "description": "Returns information about running and completed jobs."
                }
              },
              "resources": {
                "transferLogs": {
                  "methods": {
                    "list": {
                      "httpMethod": "GET",
                      "parameterOrder": [
                        "parent"
                      ],
                      "response": {
                        "$ref": "ListTransferLogsResponse"
                      },
                      "parameters": {
                        "pageToken": {
                          "description": "Pagination token, which can be used to request a specific page\nof `ListTransferLogsRequest` list results. For multiple-page\nresults, `ListTransferLogsResponse` outputs\na `next_page` token, which can be used as the\n`page_token` value to request the next page of list results.",
                          "type": "string",
                          "location": "query"
                        },
                        "pageSize": {
                          "description": "Page size. The default page size is the maximum value of 1000 results.",
                          "format": "int32",
                          "type": "integer",
                          "location": "query"
                        },
                        "messageTypes": {
                          "enum": [
                            "MESSAGE_SEVERITY_UNSPECIFIED",
                            "INFO",
                            "WARNING",
                            "ERROR",
                            "DEBUG"
                          ],
                          "description": "Message types to return. If not populated - INFO, WARNING and ERROR\nmessages are returned.",
                          "type": "string",
                          "repeated": true,
                          "location": "query"
                        },
                        "parent": {
                          "description": "Transfer run name in the form:\n`projects/{project_id}/transferConfigs/{config_Id}/runs/{run_id}`.",
                          "required": true,
                          "type": "string",
                          "pattern": "^projects/[^/]+/transferConfigs/[^/]+/runs/[^/]+$",
                          "location": "path"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/bigquery",
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/cloud-platform.read-only"
                      ],
                      "flatPath": "v1/projects/{projectsId}/transferConfigs/{transferConfigsId}/runs/{runsId}/transferLogs",
                      "id": "bigquerydatatransfer.projects.transferConfigs.runs.transferLogs.list",
                      "path": "v1/{+parent}/transferLogs",
                      "description": "Returns user facing log messages for the data transfer run."
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "parameters": {
    "uploadType": {
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string"
    },
    "fields": {
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response.",
      "type": "string"
    },
    "$.xgafv": {
      "enum": [
        "1",
        "2"
      ],
      "description": "V1 error format.",
      "type": "string",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query"
    },
    "callback": {
      "location": "query",
      "description": "JSONP",
      "type": "string"
    },
    "alt": {
      "description": "Data format for response.",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "type": "string",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query"
    },
    "access_token": {
      "description": "OAuth access token.",
      "type": "string",
      "location": "query"
    },
    "key": {
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string"
    },
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string",
      "location": "query"
    },
    "pp": {
      "location": "query",
      "description": "Pretty-print response.",
      "type": "boolean",
      "default": "true"
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "type": "string",
      "location": "query"
    },
    "bearer_token": {
      "description": "OAuth bearer token.",
      "type": "string",
      "location": "query"
    },
    "upload_protocol": {
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string",
      "location": "query"
    },
    "prettyPrint": {
      "description": "Returns response with indentations and line breaks.",
      "type": "boolean",
      "default": "true",
      "location": "query"
    }
  },
  "version": "v1",
  "baseUrl": "https://bigquerydatatransfer.googleapis.com/",
  "servicePath": "",
  "description": "Transfers data from partner SaaS applications to Google BigQuery on a scheduled, managed basis.",
  "kind": "discovery#restDescription",
  "basePath": "",
  "documentationLink": "https://cloud.google.com/bigquery/",
  "id": "bigquerydatatransfer:v1",
  "revision": "20180529"
}